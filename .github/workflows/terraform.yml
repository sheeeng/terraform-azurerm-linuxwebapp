name: Terraform
on:
  push:
    branches:
      - main
jobs:
  trivy-scan-job:
    name: "Trivy Scan Job"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    uses: ./.github/workflows/trivy-workflow.yml
    with:
      runs-on: ubuntu-latest
      trivy-error-is-success: true
      trivy-sbom-enabled: true
      working-directory: ./tests/
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # ratchet:actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # ratchet:hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.1
      - name: Terraform Format Check
        run: terraform fmt -check
        id: fmt
        continue-on-error: false
      - name: Terraform Format
        run: |
          terraform fmt -recursive .
        continue-on-error: false
      - name: Terraform Initialize
        id: init
        run: |
          terraform init
        continue-on-error: false
      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color
        continue-on-error: false
      - name: Inject Terraform Documentation
        uses: terraform-docs/gh-actions@f6d59f89a280fa0a3febf55ef68f146784b20ba0 # ratchet:terraform-docs/gh-actions@v1
        if: |
          steps.validate.outcome == 'success'
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
